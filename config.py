import os
import sys
from pathlib import Path

def load_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.txt —Ä—è–¥–æ–º —Å EXE"""
    if getattr(sys, 'frozen', False):
        # –ú—ã –≤ EXE - –∏—â–µ–º config.txt —Ä—è–¥–æ–º —Å EXE
        config_path = Path(sys.executable).parent / 'config.txt'
    else:
        # –ú—ã –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ - –∏—â–µ–º config.txt –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
        config_path = Path(__file__).parent / 'config.txt'

    config = {}

    if config_path.exists():
        with open(config_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                # –£–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
                if '#' in line:
                    line = line.split('#')[0].strip()

                if line and '=' in line:
                    key, value = line.split('=', 1)
                    config[key.strip()] = value.strip()
    else:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä config.txt –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç
        create_example_config(config_path)
        print(f"‚ö†Ô∏è  config.txt not found! Created example file: {config_path}")
        print("üìù Please edit config.txt and restart the bot")
        sys.exit(1)

    return config

def create_example_config(config_path):
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä config.txt"""
    example_content = """# Telegram Bot Settings
BOT_TOKEN=your_bot_token_here
ADMIN_CHAT_ID=123456789

# Email Settings (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password

# IMAP Settings (optional)
EMAIL_IMAP_HOST=imap.gmail.com
EMAIL_IMAP_PORT=993
POLL_EMAIL_INTERVAL=60

# Admin Email
ADMIN_EMAIL=admin@example.com

# How to get BOT_TOKEN:
# 1. Write to @BotFather in Telegram
# 2. Send /newbot command
# 3. Follow instructions
# 4. Copy the token here

# How to get ADMIN_CHAT_ID:
# 1. Start the bot once
# 2. Send any message to the bot
# 3. Check console output - your chat_id will be shown
"""
    with open(config_path, 'w', encoding='utf-8') as f:
        f.write(example_content)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
config = load_config()

# === Telegram ===
BOT_TOKEN = config.get('BOT_TOKEN', '')
try:
    ADMIN_CHAT_ID = int(config.get('ADMIN_CHAT_ID', '0'))
except ValueError:
    ADMIN_CHAT_ID = 0

# === SMTP ===
SMTP_HOST = config.get('SMTP_HOST', 'smtp.gmail.com')
SMTP_PORT = int(config.get('SMTP_PORT', '587'))
SMTP_USER = config.get('SMTP_USER', '')
SMTP_PASSWORD = config.get('SMTP_PASSWORD', '')

# === IMAP ===
EMAIL_IMAP_HOST = config.get('EMAIL_IMAP_HOST', 'imap.gmail.com')
EMAIL_IMAP_PORT = int(config.get('EMAIL_IMAP_PORT', '993'))
EMAIL_IMAP_USER = config.get('EMAIL_IMAP_USER', SMTP_USER)
EMAIL_IMAP_PASSWORD = config.get('EMAIL_IMAP_PASSWORD', SMTP_PASSWORD)
POLL_EMAIL_INTERVAL = int(config.get('POLL_EMAIL_INTERVAL', '60'))

# === Admin Email ===
ADMIN_EMAIL = config.get('ADMIN_EMAIL', SMTP_USER)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
if not BOT_TOKEN:
    print("‚ùå ERROR: BOT_TOKEN is required in config.txt")
    print("üí° Get token from @BotFather in Telegram")
    sys.exit(1)

print("‚úÖ Config loaded successfully from config.txt")