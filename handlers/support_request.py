# handlers/support_request.py

from aiogram import Router, F                                  # magic filters: F :contentReference[oaicite:0]{index=0}
from aiogram.filters import Command, StateFilter                # Command (–¥–ª—è /support –∏ /cancel) :contentReference[oaicite:1]{index=1}; StateFilter (–¥–ª—è FSM) :contentReference[oaicite:2]{index=2}
from aiogram.types import Message, CallbackQuery                # —Ç–∏–ø—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback-–∫–≤–æ—Ä–∏—Å
from aiogram.fsm.context import FSMContext                      # –∫–æ–Ω—Ç–µ–∫—Å—Ç FSM –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–∞
from aiogram.utils.keyboard import InlineKeyboardBuilder        # InlineKeyboardBuilder –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã :contentReference[oaicite:3]{index=3}

from states import SupportRequest
from tracker import create_issue, upload_attachments

router = Router()

def build_confirm_kb() -> InlineKeyboardBuilder:
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ ¬´–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å¬ª –∏ ¬´–û—Ç–º–µ–Ω–∏—Ç—å¬ª.
    """
    kb = InlineKeyboardBuilder()                               # —Å–º. –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è builder :contentReference[oaicite:4]{index=4}
    kb.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_yes")
    kb.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",   callback_data="confirm_no")
    kb.adjust(2)
    return kb

@router.message(Command("support"))
async def cmd_support(message: Message, state: FSMContext):
    """
    –°—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö—ç–Ω–¥–ª–µ—Ä: –æ—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–±–æ—Ä—É –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
    """
    await state.clear()
    await state.set_state(SupportRequest.waiting_for_organization)
    await message.answer("üìã –ù–∞—á–Ω—ë–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:")

@router.message(StateFilter(SupportRequest.waiting_for_organization))
async def org_entered(message: Message, state: FSMContext):
    await state.update_data(organization=message.text)
    await state.set_state(SupportRequest.waiting_for_full_name)
    await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")

@router.message(StateFilter(SupportRequest.waiting_for_full_name))
async def name_entered(message: Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await state.set_state(SupportRequest.waiting_for_phone)
    await message.answer("üìû –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")

@router.message(StateFilter(SupportRequest.waiting_for_phone))
async def phone_entered(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(SupportRequest.waiting_for_email)
    await message.answer("‚úâÔ∏è –í–≤–µ–¥–∏—Ç–µ e-mail:")

@router.message(StateFilter(SupportRequest.waiting_for_email))
async def email_entered(message: Message, state: FSMContext):
    await state.update_data(email=message.text)
    await state.set_state(SupportRequest.waiting_for_topic)
    await message.answer("üìù –¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è:")

@router.message(StateFilter(SupportRequest.waiting_for_topic))
async def topic_entered(message: Message, state: FSMContext):
    await state.update_data(topic=message.text)
    await state.set_state(SupportRequest.waiting_for_description)
    await message.answer("üñã –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ:")

@router.message(StateFilter(SupportRequest.waiting_for_description))
async def description_entered(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(SupportRequest.waiting_for_attachments)
    await message.answer("üìé –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /skip, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç.")

@router.message(
    StateFilter(SupportRequest.waiting_for_attachments),
    F.photo | F.document | (F.text & (~F.text.startswith("/")))  # –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–ª–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –Ω–µ –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å "/"
)
async def attachments_entered(message: Message, state: FSMContext):
    data = await state.get_data()
    files = data.get("attachments", [])
    if message.photo or message.document:
        file_id = message.photo[-1].file_id if message.photo else message.document.file_id
        files.append(file_id)
        await state.update_data(attachments=files)
        await message.answer("–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /done.")
        return

    # –ª—é–±–æ–π –≤–≤–æ–¥, –Ω–µ —Ñ–∞–π–ª, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∏–∂–µ
    text = message.text or ""
    if text.lower() in ("/skip", "/done"):
        summary = (
            f"üëÄ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:\n"
            f"‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {data['organization']}\n"
            f"‚Ä¢ –§–ò–û: {data['full_name']}\n"
            f"‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
            f"‚Ä¢ E-mail: {data['email']}\n"
            f"‚Ä¢ –¢–µ–º–∞: {data['topic']}\n"
            f"‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {data['description']}\n"
            f"‚Ä¢ –í–ª–æ–∂–µ–Ω–∏—è: {len(files)} —Ñ–∞–π–ª(–æ–≤)"
        )
        kb = build_confirm_kb().as_markup()
        await state.update_data(attachments=files)
        await state.set_state(SupportRequest.waiting_for_confirmation)
        await message.answer(summary, reply_markup=kb)
        return

    await message.answer("‚ÑπÔ∏è –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /skip /done –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")

@router.callback_query(
    F.data.in_(["confirm_yes", "confirm_no"]),
    StateFilter(SupportRequest.waiting_for_confirmation)
)
async def on_confirm(call: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É –∑–∞–ø—Ä–æ—Å–∞.
    """
    await call.answer()  # —É–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    if call.data == "confirm_no":
        await state.clear()
        return await call.message.edit_text("‚ùå –û—Ç–º–µ–Ω–∞. /support –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è")

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
    data = await state.get_data()
    issue_key = create_issue(data)
    if data.get("attachments"):
        await upload_attachments(issue_key, data["attachments"], call.bot)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–ª—è –æ–ø—Ä–æ—Å–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    from polling import issue_to_chat, last_comment_id
    issue_to_chat[issue_key] = call.from_user.id
    last_comment_id[issue_key] = None

    await call.message.edit_text(
        f"‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: <b>{issue_key}</b>\n"
        "–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏."
    )
    await state.set_state(SupportRequest.waiting_for_support_response)

@router.message(Command("cancel"), StateFilter("*"))
async def cancel(message: Message, state: FSMContext):
    """
    –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.
    """
    await state.clear()
    await message.answer("üö´ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ë–Ω. /support –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–Ω–æ–≤–æ")
